[{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>The content of the package-lock.json</p>","example":null,"read_only":false,"type":"attribute set","name":"WIP-nodejs-builder-v3.packageLock"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>The package-lock.json file to use.</p>\n","example":null,"read_only":false,"type":"null or absolute path","name":"WIP-nodejs-builder-v3.packageLockFile"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>Also known as 'graph'.</p>\n<p>Holds all information, including cyclic references.</p>\n<p>Use this structure to access meta information from the lockfile.\nSuch as bins, path etc.</p>\n<p>Can be JSON serialized.</p>\n","example":null,"read_only":false,"type":"attribute set of attribute set of (submodule)","name":"WIP-nodejs-builder-v3.pdefs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of string","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.bins"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.dependencies.<name>.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.dependencies.<name>.version"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.dist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>In case of conflicting versions a dependency must be installed in multiple nested locations.</p>\n<p>In this example: Because the root &quot;node_modules/ansi-regex&quot; is a different version.\nThe current version must be installed privately if anyone depdends on it.</p>\n<p>{\n&quot;node_modules/cliui/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/wrap-ansi/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/yargs/node_modules/ansi-regex&quot; = true;\n};</p>\n<p>npm usually already resolved this, can be manually adjusted via this option.</p>\n","example":null,"read_only":false,"type":"attribute set of boolean","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.info.allPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>A json serializable attribute-set.\nHolds all directories and bin symlinks realized the build script.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">{\n  &quot;node_modules/tap-dot&quot; = {\n    bins = {\n      &quot;node_modules/.bin/tap-dot&quot; = &quot;node_modules/tap-dot/bin/dot&quot;;\n    };\n    source = «derivation tap-dot.drv»;\n  };\n  # ..\n}\n</code></pre>\n","example":null,"read_only":false,"type":"null or raw value","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.info.fileSystem"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.info.initialPath"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"one of \"source\", \"dist\"","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.info.initialState"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.installed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.prepared-dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.prepared-prod"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/public/interface.nix"],"default":null,"description":"<p>The final result of the evaluated package.\nContains everything that nix expects from a derivation.\nContains fields like name, outputs, drvPath, outPath, etc.\nCan be build with nix-build or <code>nix build</code>.</p>\n","example":null,"read_only":false,"type":"lazy attribute set of anything","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.public"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"WIP-nodejs-builder-v3.pdefs.<name>.<name>.source"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>A list of trusted dependencies.</p>\n<p>If a dependency is trusted.\nRun the following scripts in order if present:</p>\n<blockquote>\n<p>All versions of a dependency are trusted if there are multiple versions.</p>\n</blockquote>\n<p>preinstall\ninstall\npostinstall\nprepublish\npreprepare\nprepare\npostprepare</p>\n<p>The lifecycle scripts run only after node_modules are completely initialized with ALL dependencies.\nLifecycle scripts can execute arbitrary code. Which makes them potentially insecure.\nThey often violate isolation between packages. Which makes them potentially insecure.</p>\n<p><em>TODO</em>:</p>\n<p>Trust all dependencies:</p>\n<p>trustedDeps [ &quot;*&quot; ]</p>\n<p>Trust all dependencies starting with &quot;@org&quot;</p>\n<p>trustedDeps [ &quot;@org/*&quot; ]</p>\n<p>which is usefull if you want to add all dependendencies within an organization.</p>\n","example":"<span class=\"punctuation-bracket\">[</span>\n  <span class=\"string\">&quot;@babel/core&quot;</span>\n<span class=\"punctuation-bracket\">]</span>\n","read_only":false,"type":"list of string","name":"WIP-nodejs-builder-v3.trustedDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__contentAddressed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__contentAddressed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__darwinAllowLocalNetworking"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__darwinAllowLocalNetworking"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"__impureHostDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"__impureHostDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"__propagatedImpureHostDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"__propagatedImpureHostDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__structuredAttrs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"__structuredAttrs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"allowSubstitutes"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"allowSubstitutes"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"allowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"allowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"allowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"allowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or absolute path))","name":"args"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or absolute path))","name":"args"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"buildFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"buildFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"buildInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"buildInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"buildPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"buildPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.build-system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"buildPythonPackage.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"buildPythonPackage.disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"buildPythonPackage.disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"buildPythonPackage.disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"buildPythonPackage.disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"buildPythonPackage.disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"buildPythonPackage.format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"buildPythonPackage.format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"buildPythonPackage.format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"buildPythonPackage.format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"buildPythonPackage.format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.makeWrapperArgs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.makeWrapperArgs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.makeWrapperArgs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.makeWrapperArgs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.makeWrapperArgs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"attribute set of (string or absolute path or package)","name":"buildPythonPackage.optional-dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"attribute set of (string or absolute path or package)","name":"buildPythonPackage.optional-dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"attribute set of (string or absolute path or package)","name":"buildPythonPackage.optional-dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"attribute set of (string or absolute path or package)","name":"buildPythonPackage.optional-dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"attribute set of (string or absolute path or package)","name":"buildPythonPackage.optional-dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.permitUserSite"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.permitUserSite"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.permitUserSite"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.permitUserSite"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.permitUserSite"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to <code>pip install</code></p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pipInstallFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to <code>pip install</code></p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pipInstallFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to <code>pip install</code></p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pipInstallFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to <code>pip install</code></p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pipInstallFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to <code>pip install</code></p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pipInstallFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>Whether the pyproject format should be used. When set to <code>true</code>,\n<code>pypaBuildHook</code> will be used, and you can add the required build dependencies\nfrom <code>build-system.requires</code> to <code>build-system</code>.</p>\n<p>Note that the pyproject format falls back to using <code>setuptools</code>, so\nyou can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>.\nWhen set to <code>false</code>, you can use the existing hooks or provide your own\nlogic to build the package. This can be useful for packages that don't\nsupport the pyproject format.</p>\n<p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p>\n","example":null,"read_only":false,"type":"null or boolean","name":"buildPythonPackage.pyproject"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>Whether the pyproject format should be used. When set to <code>true</code>,\n<code>pypaBuildHook</code> will be used, and you can add the required build dependencies\nfrom <code>build-system.requires</code> to <code>build-system</code>.</p>\n<p>Note that the pyproject format falls back to using <code>setuptools</code>, so\nyou can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>.\nWhen set to <code>false</code>, you can use the existing hooks or provide your own\nlogic to build the package. This can be useful for packages that don't\nsupport the pyproject format.</p>\n<p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p>\n","example":null,"read_only":false,"type":"null or boolean","name":"buildPythonPackage.pyproject"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>Whether the pyproject format should be used. When set to <code>true</code>,\n<code>pypaBuildHook</code> will be used, and you can add the required build dependencies\nfrom <code>build-system.requires</code> to <code>build-system</code>.</p>\n<p>Note that the pyproject format falls back to using <code>setuptools</code>, so\nyou can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>.\nWhen set to <code>false</code>, you can use the existing hooks or provide your own\nlogic to build the package. This can be useful for packages that don't\nsupport the pyproject format.</p>\n<p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p>\n","example":null,"read_only":false,"type":"null or boolean","name":"buildPythonPackage.pyproject"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>Whether the pyproject format should be used. When set to <code>true</code>,\n<code>pypaBuildHook</code> will be used, and you can add the required build dependencies\nfrom <code>build-system.requires</code> to <code>build-system</code>.</p>\n<p>Note that the pyproject format falls back to using <code>setuptools</code>, so\nyou can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>.\nWhen set to <code>false</code>, you can use the existing hooks or provide your own\nlogic to build the package. This can be useful for packages that don't\nsupport the pyproject format.</p>\n<p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p>\n","example":null,"read_only":false,"type":"null or boolean","name":"buildPythonPackage.pyproject"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>Whether the pyproject format should be used. When set to <code>true</code>,\n<code>pypaBuildHook</code> will be used, and you can add the required build dependencies\nfrom <code>build-system.requires</code> to <code>build-system</code>.</p>\n<p>Note that the pyproject format falls back to using <code>setuptools</code>, so\nyou can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>.\nWhen set to <code>false</code>, you can use the existing hooks or provide your own\nlogic to build the package. This can be useful for packages that don't\nsupport the pyproject format.</p>\n<p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p>\n","example":null,"read_only":false,"type":"null or boolean","name":"buildPythonPackage.pyproject"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to pytest</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pytestFlagsArray"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to pytest</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pytestFlagsArray"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to pytest</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pytestFlagsArray"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to pytest</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pytestFlagsArray"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra flags passed to pytest</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pytestFlagsArray"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Check whether importing the listed modules works</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonImportsCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Check whether importing the listed modules works</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonImportsCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Check whether importing the listed modules works</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonImportsCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Check whether importing the listed modules works</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonImportsCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Check whether importing the listed modules works</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonImportsCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names on which to remove version constraints.\nOr the boolean value true to remove all of them</p>\n","example":null,"read_only":false,"type":"(list of string) or boolean","name":"buildPythonPackage.pythonRelaxDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names on which to remove version constraints.\nOr the boolean value true to remove all of them</p>\n","example":null,"read_only":false,"type":"(list of string) or boolean","name":"buildPythonPackage.pythonRelaxDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names on which to remove version constraints.\nOr the boolean value true to remove all of them</p>\n","example":null,"read_only":false,"type":"(list of string) or boolean","name":"buildPythonPackage.pythonRelaxDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names on which to remove version constraints.\nOr the boolean value true to remove all of them</p>\n","example":null,"read_only":false,"type":"(list of string) or boolean","name":"buildPythonPackage.pythonRelaxDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names on which to remove version constraints.\nOr the boolean value true to remove all of them</p>\n","example":null,"read_only":false,"type":"(list of string) or boolean","name":"buildPythonPackage.pythonRelaxDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names which to remove.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonRemoveDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names which to remove.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonRemoveDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names which to remove.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonRemoveDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names which to remove.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonRemoveDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of dependency names which to remove.</p>\n","example":null,"read_only":false,"type":"list of string","name":"buildPythonPackage.pythonRemoveDeps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">true</span>\n","description":"<p>Remove bytecode from bin folder.\nWhen a Python script has the extension <code>.py</code>, bytecode is generated\nTypically, executables in bin have no extension, so no bytecode is generated.\nHowever, some packages do provide executables with extensions, and thus bytecode is generated.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.removeBinBytecode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">true</span>\n","description":"<p>Remove bytecode from bin folder.\nWhen a Python script has the extension <code>.py</code>, bytecode is generated\nTypically, executables in bin have no extension, so no bytecode is generated.\nHowever, some packages do provide executables with extensions, and thus bytecode is generated.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.removeBinBytecode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">true</span>\n","description":"<p>Remove bytecode from bin folder.\nWhen a Python script has the extension <code>.py</code>, bytecode is generated\nTypically, executables in bin have no extension, so no bytecode is generated.\nHowever, some packages do provide executables with extensions, and thus bytecode is generated.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.removeBinBytecode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">true</span>\n","description":"<p>Remove bytecode from bin folder.\nWhen a Python script has the extension <code>.py</code>, bytecode is generated\nTypically, executables in bin have no extension, so no bytecode is generated.\nHowever, some packages do provide executables with extensions, and thus bytecode is generated.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.removeBinBytecode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"variable\">true</span>\n","description":"<p>Remove bytecode from bin folder.\nWhen a Python script has the extension <code>.py</code>, bytecode is generated\nTypically, executables in bin have no extension, so no bytecode is generated.\nHowever, some packages do provide executables with extensions, and thus bytecode is generated.</p>\n","example":null,"read_only":false,"type":"boolean","name":"buildPythonPackage.removeBinBytecode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"builder"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"builder"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"builtins-derivation.__contentAddressed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"builtins-derivation.__structuredAttrs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"builtins-derivation.allowSubstitutes"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.allowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.allowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or absolute path))","name":"builtins-derivation.args"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string or absolute path or package","name":"builtins-derivation.builder"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.disallowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.disallowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or package))","name":"builtins-derivation.exportReferenceGraph"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.impureEnvVars"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"builtins-derivation.outputHash"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"builtins-derivation.outputHashAlgo"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"builtins-derivation.outputHashMode"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span>\n  <span class=\"string\">&quot;out&quot;</span>\n<span class=\"punctuation-bracket\">]</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.outputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.passAsFile"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"builtins-derivation.preferLocalBuild"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/builtins-derivation/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"builtins-derivation.system"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  true if the host and build platforms are the same, false otherwise.</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Raise an error if two packages are installed with the same name\nTODO: For cross we probably need a different PYTHONPATH, or not\nadd the runtime deps until after buildPhase.</p>\n","example":null,"read_only":false,"type":"boolean","name":"catchConflicts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"checkFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"checkFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"checkInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"checkInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"checkPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"checkPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"checkTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"checkTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"cmakeFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"cmakeFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"configureFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"configureFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"configurePhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"configurePhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"configurePlatforms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"configurePlatforms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"configureScript"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"configureScript"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>List of runtime python dependencies. Aside from propagating dependencies,\n<code>buildPythonPackage</code> also injects code into and wraps executables with the\npaths included in this list. Items listed in <code>install_requires</code> go here.</p>\n","example":null,"read_only":false,"type":"list of (string or absolute path or package)","name":"dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildRustPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/nodejs-package-json/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/nodejs-package-json-v3/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/rust-crane/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix","https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/deps/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>All dependencies of the package. This option should be set by the &quot;outer world&quot; and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p>\n<p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable.\nNothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p>\n<p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p>\n","example":"<span class=\"punctuation-bracket\">{</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">,</span> ...<span class=\"punctuation-bracket\">}</span>: <span class=\"punctuation-bracket\">{</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">stdenv</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"keyword\">inherit</span> <span class=\"punctuation-bracket\">(</span><span class=\"variable\">nixpkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">haskellPackages</span></span><span class=\"punctuation-bracket\">)</span> <span class=\"variable\">pandoc</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"lazy attribute set of raw value","name":"deps"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildRustPackage/interface.nix"],"default":null,"description":"<p>The cargo package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.cargo"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/rust-crane/interface.nix"],"default":null,"description":"<p>The crane lib that was instantiated from <code>craneSource</code></p>","example":null,"read_only":true,"type":"attribute set","name":"deps.crane"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/rust-crane/interface.nix"],"default":null,"description":"<p>Source to use for crane functions</p>","example":null,"read_only":false,"type":"absolute path","name":"deps.craneSource"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/rust-crane/interface.nix"],"default":null,"description":"<p>Function to call that returns a rust toolchain using the provided nixpkgs instance</p>","example":null,"read_only":false,"type":"function that evaluates to a(n) package","name":"deps.mkRustToolchain"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/nodejs-package-json/interface.nix"],"default":null,"description":"<p>The npm package used to build the lock file</p>","example":null,"read_only":false,"type":"package","name":"deps.npm"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/nodejs-package-json-v3/interface.nix"],"default":null,"description":"<p>The npm package used to build the lock file</p>","example":null,"read_only":false,"type":"package","name":"deps.npm"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage/interface.nix"],"default":null,"description":"<p>The python interpreter package to use</p>","example":null,"read_only":false,"type":"package","name":"deps.python"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation/interface.nix"],"default":null,"description":"<p>The stdenv used for building this package</p>\n","example":null,"read_only":false,"type":"raw value","name":"deps.stdenv"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildRustPackage/interface.nix"],"default":null,"description":"<p>The function to use to write text to a file</p>","example":null,"read_only":false,"type":"raw value","name":"deps.writeText"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildBuild"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildBuild"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildBuildPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildBuildPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildTargetPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsBuildTargetPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsHostHost"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsHostHost"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsHostHostPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsHostHostPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsTargetTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsTargetTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsTargetTargetPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"depsTargetTargetPropagated"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>used to disable derivation, useful for specific python versions</p>\n","example":null,"read_only":false,"type":"boolean","name":"disabled"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Test paths to ignore in checkPhase</p>\n","example":null,"read_only":false,"type":"list of anything","name":"disabledTestPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Disable running specific unit tests</p>\n","example":null,"read_only":false,"type":"list of string","name":"disabledTests"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"disallowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"disallowedReferences"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"disallowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"disallowedRequisites"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"distFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"distFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"distPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"distPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"distTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"distTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doDist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doDist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doInstallCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"doInstallCheck"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddDisableDepTrack"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddDisableDepTrack"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddPrefix"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddPrefix"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddStaticConfigureFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontAddStaticConfigureFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontBuild"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontBuild"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontConfigure"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontConfigure"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontCopyDist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontCopyDist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontDisableStatic"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontDisableStatic"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontFixLibtool"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontFixLibtool"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontFixup"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontFixup"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontMakeSourcesWritable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontMakeSourcesWritable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontMoveBin"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontMoveBin"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatch"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatch"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatchELF"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatchELF"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatchShebangs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPatchShebangs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPruneLibtoolFiles"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontPruneLibtoolFiles"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStrip"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStrip"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStripHost"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStripHost"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStripTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontStripTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontUnpack"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"dontUnpack"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Don't use Pip to install a wheel\nNote this is actually a variable for the pipInstallPhase in pip's setupHook.\nIt's included here to prevent an infinite recursion.</p>\n","example":null,"read_only":false,"type":"boolean","name":"dontUsePipInstall"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Skip wrapping of python programs altogether</p>\n","example":null,"read_only":false,"type":"boolean","name":"dontWrapPythonPrograms"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/python-editables/interface.nix"],"default":null,"description":"<p>An attribute set mapping package names to a path, absolute or relative,\nof source directories which should be installed in editable mode in\n<a href=\"#pipeditablesshellhook\">editablesShellHook</a>.\ni.e.</p>\n<pre><code>  pip.editables.charset-normalizer = &quot;/home/user/src/charset-normalizer&quot;.\n</code></pre>\n<p>The top-level package is included automatically.</p>\n<p>This must be a string, as otherwise content would be copied to the nix store\nand loaded from there, voiding the benefits of editable installs.\nFor the same reason, it is advised to use source filtering if you\nuse a path inside the current repo to avoid unecessary rebuilds.</p>\n","example":null,"read_only":false,"type":"attribute set of string","name":"editables"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/python-editables/interface.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":true,"type":"package","name":"editablesDevShell"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/python-editables/interface.nix"],"default":null,"description":"<p>A shellHook to be included into your devShells to install <a href=\"#pipeditables\">editables</a></p>\n","example":null,"read_only":true,"type":"string","name":"editablesShellHook"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"enableParallelBuilding"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"enableParallelBuilding"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"enableParallelChecking"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or boolean","name":"enableParallelChecking"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/env/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>environment variables passed to the build environment</p>\n","example":null,"read_only":false,"type":"attribute set of (null or boolean or signed integer or string or absolute path or package or list of (boolean or signed integer or string or absolute path or package))","name":"env"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/eval-cache/interface.nix"],"default":"<span class=\"variable\">false</span>\n","description":"<p>Whether to enable the evaluation cache for this derivation.</p>","example":"<span class=\"variable\">true</span>\n","read_only":false,"type":"boolean","name":"eval-cache.enable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or package))","name":"exportReferenceGraph"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of (string or package))","name":"exportReferenceGraph"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"fixupPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"fixupPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/flags/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Enable/disable flags declared in <code>flagsOffered</code></p>\n","example":null,"read_only":false,"type":"submodule","name":"flags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/flags/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>declare flags that can be used to enable/disable features</p>\n","example":null,"read_only":false,"type":"attribute set of string","name":"flagsOffered"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"forceShare"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"forceShare"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/buildPythonPackage-mixin/interface.nix"],"default":"<span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">  &quot;setuptools&quot; if `pyproject` is `null`, otherwise `null`</span>\n<span class=\"string\">&#39;&#39;</span>\n","description":"<p>Several package formats are supported:\n<code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.\n&quot;setuptools&quot; : Install a common setuptools/distutils based package. This builds a wheel.\n&quot;wheel&quot; : Install from a pre-compiled wheel.\n&quot;flit&quot; : Install a flit package. This builds a wheel.\n&quot;pyproject&quot;: Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.\n&quot;egg&quot;: Install a package from an egg.\n&quot;other&quot; : Provide your own buildPhase and installPhase.</p>\n","example":null,"read_only":false,"type":"null or string","name":"format"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":null,"description":"<p>Holds multiple package sets (eg. groups).\nHolds shared config (overrideAll) and overrides on a global and on a per group basis.</p>\n","example":null,"read_only":false,"type":"lazy attribute set of (submodule)","name":"groups"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":null,"description":"<p>Holds multiple package sets (eg. groups).\nHolds shared config (overrideAll) and overrides on a global and on a per group basis.</p>\n","example":null,"read_only":false,"type":"lazy attribute set of (submodule)","name":"groups"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Common configuration for all packages in all groups</p>\n","example":null,"read_only":false,"type":"module","name":"groups.<name>.overrideAll"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Common configuration for all packages in all groups</p>\n","example":null,"read_only":false,"type":"module","name":"groups.<name>.overrideAll"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Holds overrides for the packages in the current groups</p>\n","example":null,"read_only":false,"type":"lazy attribute set of module","name":"groups.<name>.overrides"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Holds overrides for the packages in the current groups</p>\n","example":null,"read_only":false,"type":"lazy attribute set of module","name":"groups.<name>.overrides"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":null,"description":"<p>Contains all packages for the current group in the forma of a set like:</p>\n<pre><code>{\n  package1.&quot;1.0.0&quot; = {\n    module = {\n      # the package configuration\n    };\n    public = {\n      # the evaluated package\n    };\n  };\n  package2.&quot;1.0.0&quot; = {\n    module = {\n      # the package configuration\n    };\n    public = {\n      # the evaluated package\n    };\n  };\n}\n</code></pre>\n","example":null,"read_only":false,"type":"lazy attribute set of lazy attribute set of (submodule)","name":"groups.<name>.packages"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":null,"description":"<p>Contains all packages for the current group in the forma of a set like:</p>\n<pre><code>{\n  package1.&quot;1.0.0&quot; = {\n    module = {\n      # the package configuration\n    };\n    public = {\n      # the evaluated package\n    };\n  };\n  package2.&quot;1.0.0&quot; = {\n    module = {\n      # the package configuration\n    };\n    public = {\n      # the evaluated package\n    };\n  };\n}\n</code></pre>\n","example":null,"read_only":false,"type":"lazy attribute set of lazy attribute set of (submodule)","name":"groups.<name>.packages"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of string","name":"groups.<name>.packages.<name>.<name>.evaluated.bins"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"groups.<name>.packages.<name>.<name>.evaluated.dependencies.<name>.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"groups.<name>.packages.<name>.<name>.evaluated.dependencies.<name>.version"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"groups.<name>.packages.<name>.<name>.evaluated.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.dist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>In case of conflicting versions a dependency must be installed in multiple nested locations.</p>\n<p>In this example: Because the root &quot;node_modules/ansi-regex&quot; is a different version.\nThe current version must be installed privately if anyone depdends on it.</p>\n<p>{\n&quot;node_modules/cliui/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/wrap-ansi/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/yargs/node_modules/ansi-regex&quot; = true;\n};</p>\n<p>npm usually already resolved this, can be manually adjusted via this option.</p>\n","example":null,"read_only":false,"type":"attribute set of boolean","name":"groups.<name>.packages.<name>.<name>.evaluated.info.allPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>A json serializable attribute-set.\nHolds all directories and bin symlinks realized the build script.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">{\n  &quot;node_modules/tap-dot&quot; = {\n    bins = {\n      &quot;node_modules/.bin/tap-dot&quot; = &quot;node_modules/tap-dot/bin/dot&quot;;\n    };\n    source = «derivation tap-dot.drv»;\n  };\n  # ..\n}\n</code></pre>\n","example":null,"read_only":false,"type":"null or raw value","name":"groups.<name>.packages.<name>.<name>.evaluated.info.fileSystem"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"groups.<name>.packages.<name>.<name>.evaluated.info.initialPath"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"one of \"source\", \"dist\"","name":"groups.<name>.packages.<name>.<name>.evaluated.info.initialState"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.installed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.prepared-dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.prepared-prod"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/public/interface.nix"],"default":null,"description":"<p>The final result of the evaluated package.\nContains everything that nix expects from a derivation.\nContains fields like name, outputs, drvPath, outPath, etc.\nCan be build with nix-build or <code>nix build</code>.</p>\n","example":null,"read_only":false,"type":"lazy attribute set of anything","name":"groups.<name>.packages.<name>.<name>.evaluated.public"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.evaluated.source"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>The package configuration</p>\n","example":null,"read_only":false,"type":"module","name":"groups.<name>.packages.<name>.<name>.module"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>The package configuration</p>\n","example":null,"read_only":false,"type":"module","name":"groups.<name>.packages.<name>.<name>.module"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of string","name":"groups.<name>.packages.<name>.<name>.module.bins"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"groups.<name>.packages.<name>.<name>.module.dependencies"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"groups.<name>.packages.<name>.<name>.module.dependencies.<name>.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"groups.<name>.packages.<name>.<name>.module.dependencies.<name>.version"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"boolean","name":"groups.<name>.packages.<name>.<name>.module.dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.module.dist"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>In case of conflicting versions a dependency must be installed in multiple nested locations.</p>\n<p>In this example: Because the root &quot;node_modules/ansi-regex&quot; is a different version.\nThe current version must be installed privately if anyone depdends on it.</p>\n<p>{\n&quot;node_modules/cliui/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/wrap-ansi/node_modules/ansi-regex&quot; = true;\n&quot;node_modules/yargs/node_modules/ansi-regex&quot; = true;\n};</p>\n<p>npm usually already resolved this, can be manually adjusted via this option.</p>\n","example":null,"read_only":false,"type":"attribute set of boolean","name":"groups.<name>.packages.<name>.<name>.module.info.allPaths"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>A json serializable attribute-set.\nHolds all directories and bin symlinks realized the build script.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">{\n  &quot;node_modules/tap-dot&quot; = {\n    bins = {\n      &quot;node_modules/.bin/tap-dot&quot; = &quot;node_modules/tap-dot/bin/dot&quot;;\n    };\n    source = «derivation tap-dot.drv»;\n  };\n  # ..\n}\n</code></pre>\n","example":null,"read_only":false,"type":"null or raw value","name":"groups.<name>.packages.<name>.<name>.module.info.fileSystem"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"string","name":"groups.<name>.packages.<name>.<name>.module.info.initialPath"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":null,"description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"one of \"source\", \"dist\"","name":"groups.<name>.packages.<name>.<name>.module.info.initialState"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.module.installed"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.module.prepared-dev"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.module.prepared-prod"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/public/interface.nix"],"default":null,"description":"<p>The final result of the evaluated package.\nContains everything that nix expects from a derivation.\nContains fields like name, outputs, drvPath, outPath, etc.\nCan be build with nix-build or <code>nix build</code>.</p>\n","example":null,"read_only":false,"type":"lazy attribute set of anything","name":"groups.<name>.packages.<name>.<name>.module.public"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-nodejs-builder-v3,%20via%20option%20overrideAll/default.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string or absolute path or package or (submodule)","name":"groups.<name>.packages.<name>.<name>.module.source"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"variable\">config</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">evaluated</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">public</span></span>\n","description":"<p>The evaluated package ready to consume</p>\n","example":null,"read_only":true,"type":"package","name":"groups.<name>.packages.<name>.<name>.public"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/WIP-groups/interface.nix"],"default":"<span class=\"variable\">config</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">evaluated</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">public</span></span>\n","description":"<p>The evaluated package ready to consume</p>\n","example":null,"read_only":true,"type":"package","name":"groups.<name>.packages.<name>.<name>.public"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"hardeningDisable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"hardeningDisable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"hardeningEnable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"hardeningEnable"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"impureEnvVars"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of string)","name":"impureEnvVars"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installCheckFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installCheckFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installCheckInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installCheckInputs"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installCheckPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installCheckPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installCheckTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installCheckTarget"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or (list of anything)","name":"installFlags"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installPhase"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installTargets"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/mkDerivation-mixin/interface.nix"],"default":"<span class=\"variable\">null</span>\n","description":"<p>This option has no description.</p>","example":null,"read_only":false,"type":"null or string","name":"installTargets"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":null,"description":"<p>The content of the lock file.\nAll fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p>\n","example":null,"read_only":false,"type":"anything","name":"lock.content"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n","description":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p>\n<p>This allows adding custom logic to the lock file generation.</p>\n","example":null,"read_only":false,"type":"list of absolute path","name":"lock.extraScripts"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"},{"declarations":["https://github.com/nix-community/dream2nix/blob/main/modules/dream2nix/core/lock/interface.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Fields of the lock file</p>","example":"<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">pname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">version</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n","read_only":false,"type":"attribute set of (submodule)","name":"lock.fields"}]